#!/usr/bin/perl

use strict;
use warnings;

use Cwd;
use Getopt::Long;
use WWW::Scraper::Flickr;

our $VERSION = 0.1;
our $VERSION_STRING = "Flickr Getter $VERSION - a flickr photo fetcher";

sub main
{
    my $opts = proc_opts();
    my $scraper = WWW::Scraper::Flickr->new();

    $scraper->toggleVerbosity($opts->{verbose}) if $opts->{verbose};

    $scraper->setProxy($opts->{'proxy'}) if $opts->{'proxy'};
    $scraper->setUserAgent($opts->{'user-agent'}) if $opts->{'user-agent'};

    if ($opts->{stdin}) {
        while(<STDIN>) {
            chomp;
            push @{$opts->{urls}}, $_;
        }
    }

    for( @{ $opts->{urls} } ){
	if( $_ =~ /www\.flickr\.com\/photos\/[^\/]+\/$/){
		print "flickr: fetching [collection] '$_'.\n";
		push(@{ $opts->{urls} }, $scraper->collection($_) );
	}else{
		print "flickr: fetching [photo] '$_'.\n";
		$scraper->fetch({
			dir => $opts->{dir},
			'user-dir' => $opts->{'user-dir'},
			url => $_,
		});
	}
    }
}

sub usage
{
    my $return_code = shift;
    print STDERR <<EOF;
$VERSION_STRING
Usage: flickr [OPTION] PHOTO_URL1 [PHOTO_URL2] [PHOTO_URL3] [...]

Options:
  -h, --help           display this help message
  -p, --proxy          Use the stated proxy
  --version            display version
  -v, --verbose        be verbose, repeat for even more verbosity (1-3x)
  -d, --dir            the directory to download the file to
  --user-dir           dl into a per-user directory
EOF
    exit defined($return_code) ? $return_code : 1;
}

sub version
{
    my $exit_code = shift;
    print "$VERSION_STRING\n";
    exit defined($exit_code) ? $exit_code : 0;
}

sub proc_opts
{
    my $h = {};
    my $opts = {};
    GetOptions($h,
        'help|h',
        'proxy|p=s',
        'version',
        'verbose|v+',
        'user-agent=s',
        'dir|d=s',
        'user-dir',
    ) or usage(1);
    usage(1)   if $h->{help};
    version(0) if $h->{version};
    usage(1)   if scalar @ARGV < 1;

    $opts->{urls} = [];
    for (@ARGV) {
        if(/^-$/) { $opts->{stdin} = 1;        }
        else      { push @{$opts->{urls}}, $_; }
    }
    $opts->{'dir'}  = $h->{'dir'} ? $h->{'dir'} : getcwd();
    $opts->{'verbose'} = $h->{verbose};
    $opts->{'user-agent'} = $h->{'user-agent'};
    $opts->{'proxy'} = $h->{'proxy'};
    $opts->{'user-dir'} = $h->{'user-dir'};
    return $opts;
}

main();
